c("Jul 24 (Mon)", "Jul 25 (Tue)", "Jul 26 (Wed)", "Jul 27 (Thu)", "Jul 28 (Fri)")
data.frame(Date = c("Jul 24 (Mon)", "Jul 25 (Tue)", "Jul 26 (Wed)", "Jul 27 (Thu)", "Jul 28 (Fri)"))
library(dplyr)
data.frame(Date = c("Jul 24 (Mon)", "Jul 25 (Tue)", "Jul 26 (Wed)", "Jul 27 (Thu)", "Jul 28 (Fri)")) %>% knitr::kable()
paste(c("Overview of Prism", "Sensitivity vs. Specificity", "Contingency Tables", "Fisher's Exact Test"), collapse = " | ")
day1_topic <- paste(c("Overview of Prism", "Sensitivity vs. Specificity", "Contingency Tables", "Fisher's Exact Test"), collapse = " | ")
day2_topic <- paste(c("Binomial tests", "Chi square tests", "P-values", "Conﬁdence Intervals", "Null Hypothesis testing"), collapse = " | ")
slides <- c('[<i class="fas fa-desktop fa-lg"></i>](files/lec1/20e_statistics_lec1.pdf)',
'[<i class="fas fa-desktop fa-lg"></i>](files/lec2/20e_statistics_lec2.pdf)',
'[<i class="fas fa-desktop fa-lg"></i>](files/lec3/20e_statistics_lec3.pdf)',
'[<i class="fas fa-desktop fa-lg"></i>](files/lec4/20e_statistics_lec4.pdf)',
'[<i class="fas fa-desktop fa-lg"></i>](files/lec5/20e_statistics_lec5.pdf)')
data.frame(Date = c("Jul 24 (Mon)", "Jul 25 (Tue)", "Jul 26 (Wed)", "Jul 27 (Thu)", "Jul 28 (Fri)"),
Topic = c(day1_topic, day2_topic, day3_topic, day4_topic, day5_topic),
Slides = slides) %>%
knitr::kable() -> smry
library(dplyr)
day1_topic <- paste(c("`Overview of Prism`", "`Sensitivity vs. Specificity`", "`Contingency Tables`", "`Fisher's Exact Test`"), collapse = "<br/>")
day2_topic <- paste(c("`Binomial tests`", "`Chi square tests`", "`P-values`", "`Conﬁdence Intervals`", "`Null Hypothesis testing`"), collapse = "<br/>")
day3_topic <- paste(c("`Gaussian distributions`", "`QQ plots`", "`t-tests`", "`Comparing two datasets`"), collapse = "<br/>")
day4_topic <- paste(c("`Correlation`", "`Power analysis`", "`Multiple hypothesis testing`"), collapse = "<br/>")
day5_topic <- paste(c("`N-hacking revisited`", "`Linear regression`", "`Nonlinear regression`", "`Analysis of variance (ANOVA)`", "`Survival analysis`"), collapse = "<br/>")
slides <- c('[Link](files/lec1/20e_statistics_lec1.pdf)',
'[Link](files/lec2/20e_statistics_lec2.pdf)',
'[Link](files/lec3/20e_statistics_lec3.pdf)',
'[Link](files/lec4/20e_statistics_lec4.pdf)',
'[Link](files/lec5/20e_statistics_lec5.pdf)')
data.frame(Date = c("Jul 24 (Mon)", "Jul 25 (Tue)", "Jul 26 (Wed)", "Jul 27 (Thu)", "Jul 28 (Fri)"),
Topic = c(day1_topic, day2_topic, day3_topic, day4_topic, day5_topic),
Slides = slides) %>%
knitr::kable()
smry <- data.frame(Date = c("Jul 24 (Mon)", "Jul 25 (Tue)", "Jul 26 (Wed)", "Jul 27 (Thu)", "Jul 28 (Fri)"),
Topic = c(day1_topic, day2_topic, day3_topic, day4_topic, day5_topic),
Slides = slides) %>%
knitr::kable()
smry
binom.test(152, 335)
binom.test(152, 335, p = 0.5)
binom.test(152, 335, p = 0.5)
binom.test(152, 335, p = 0.5)
# Define the number of successes and trials
successes <- 75
trials <- 100
# Define the expected success rate under the null hypothesis
expected_rate <- 0.6
# Perform the binomial test
binom_test <- binom.test(successes, trials, p = expected_rate, alternative = "two.sided")
# Extract the p-value from the test result
p_value <- binom_test$p.value
# Print the p-value
print(p_value)
When you run this code, it will calculate the p-value for the binomial test. The p-value represents the probability of observing the given or a more extreme outcome under the null hypothesis. If the p-value is below a pre-specified significance level (e.g., 0.05), you can reject the null hypothesis and conclude that the proportion of successful outcomes is significantly different from the expected proportion.
# Define the number of successes and trials
successes <- 75
trials <- 100
# Define the expected success rate under the null hypothesis
expected_rate <- 0.6
# Perform the binomial test
binom_test <- binom.test(successes, trials, p = expected_rate, alternative = "two.sided")
# Extract the p-value from the test result
p_value <- binom_test$p.value
# Print the p-value
print(p_value)
binom.test(75, 100, p = 0.6)
successes <- 40
trials <- 50
# Define the expected success rate under the null hypothesis
expected_rate <- 0.5
# Perform the binomial test
binom_test <- binom.test(successes, trials, p = expected_rate, alternative = "greater")
# Extract the p-value from the test result
p_value <- binom_test$p.value
p_value
binom_test
