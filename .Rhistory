c("Jul 24 (Mon)", "Jul 25 (Tue)", "Jul 26 (Wed)", "Jul 27 (Thu)", "Jul 28 (Fri)")
data.frame(Date = c("Jul 24 (Mon)", "Jul 25 (Tue)", "Jul 26 (Wed)", "Jul 27 (Thu)", "Jul 28 (Fri)"))
library(dplyr)
data.frame(Date = c("Jul 24 (Mon)", "Jul 25 (Tue)", "Jul 26 (Wed)", "Jul 27 (Thu)", "Jul 28 (Fri)")) %>% knitr::kable()
paste(c("Overview of Prism", "Sensitivity vs. Specificity", "Contingency Tables", "Fisher's Exact Test"), collapse = " | ")
day1_topic <- paste(c("Overview of Prism", "Sensitivity vs. Specificity", "Contingency Tables", "Fisher's Exact Test"), collapse = " | ")
day2_topic <- paste(c("Binomial tests", "Chi square tests", "P-values", "Conﬁdence Intervals", "Null Hypothesis testing"), collapse = " | ")
slides <- c('[<i class="fas fa-desktop fa-lg"></i>](files/lec1/20e_statistics_lec1.pdf)',
'[<i class="fas fa-desktop fa-lg"></i>](files/lec2/20e_statistics_lec2.pdf)',
'[<i class="fas fa-desktop fa-lg"></i>](files/lec3/20e_statistics_lec3.pdf)',
'[<i class="fas fa-desktop fa-lg"></i>](files/lec4/20e_statistics_lec4.pdf)',
'[<i class="fas fa-desktop fa-lg"></i>](files/lec5/20e_statistics_lec5.pdf)')
data.frame(Date = c("Jul 24 (Mon)", "Jul 25 (Tue)", "Jul 26 (Wed)", "Jul 27 (Thu)", "Jul 28 (Fri)"),
Topic = c(day1_topic, day2_topic, day3_topic, day4_topic, day5_topic),
Slides = slides) %>%
knitr::kable() -> smry
library(dplyr)
day1_topic <- paste(c("`Overview of Prism`", "`Sensitivity vs. Specificity`", "`Contingency Tables`", "`Fisher's Exact Test`"), collapse = "<br/>")
day2_topic <- paste(c("`Binomial tests`", "`Chi square tests`", "`P-values`", "`Conﬁdence Intervals`", "`Null Hypothesis testing`"), collapse = "<br/>")
day3_topic <- paste(c("`Gaussian distributions`", "`QQ plots`", "`t-tests`", "`Comparing two datasets`"), collapse = "<br/>")
day4_topic <- paste(c("`Correlation`", "`Power analysis`", "`Multiple hypothesis testing`"), collapse = "<br/>")
day5_topic <- paste(c("`N-hacking revisited`", "`Linear regression`", "`Nonlinear regression`", "`Analysis of variance (ANOVA)`", "`Survival analysis`"), collapse = "<br/>")
slides <- c('[Link](files/lec1/20e_statistics_lec1.pdf)',
'[Link](files/lec2/20e_statistics_lec2.pdf)',
'[Link](files/lec3/20e_statistics_lec3.pdf)',
'[Link](files/lec4/20e_statistics_lec4.pdf)',
'[Link](files/lec5/20e_statistics_lec5.pdf)')
data.frame(Date = c("Jul 24 (Mon)", "Jul 25 (Tue)", "Jul 26 (Wed)", "Jul 27 (Thu)", "Jul 28 (Fri)"),
Topic = c(day1_topic, day2_topic, day3_topic, day4_topic, day5_topic),
Slides = slides) %>%
knitr::kable()
smry <- data.frame(Date = c("Jul 24 (Mon)", "Jul 25 (Tue)", "Jul 26 (Wed)", "Jul 27 (Thu)", "Jul 28 (Fri)"),
Topic = c(day1_topic, day2_topic, day3_topic, day4_topic, day5_topic),
Slides = slides) %>%
knitr::kable()
smry
binom.test(152, 335)
binom.test(152, 335, p = 0.5)
binom.test(152, 335, p = 0.5)
binom.test(152, 335, p = 0.5)
# Define the number of successes and trials
successes <- 75
trials <- 100
# Define the expected success rate under the null hypothesis
expected_rate <- 0.6
# Perform the binomial test
binom_test <- binom.test(successes, trials, p = expected_rate, alternative = "two.sided")
# Extract the p-value from the test result
p_value <- binom_test$p.value
# Print the p-value
print(p_value)
When you run this code, it will calculate the p-value for the binomial test. The p-value represents the probability of observing the given or a more extreme outcome under the null hypothesis. If the p-value is below a pre-specified significance level (e.g., 0.05), you can reject the null hypothesis and conclude that the proportion of successful outcomes is significantly different from the expected proportion.
# Define the number of successes and trials
successes <- 75
trials <- 100
# Define the expected success rate under the null hypothesis
expected_rate <- 0.6
# Perform the binomial test
binom_test <- binom.test(successes, trials, p = expected_rate, alternative = "two.sided")
# Extract the p-value from the test result
p_value <- binom_test$p.value
# Print the p-value
print(p_value)
binom.test(75, 100, p = 0.6)
successes <- 40
trials <- 50
# Define the expected success rate under the null hypothesis
expected_rate <- 0.5
# Perform the binomial test
binom_test <- binom.test(successes, trials, p = expected_rate, alternative = "greater")
# Extract the p-value from the test result
p_value <- binom_test$p.value
p_value
binom_test
knitr::opts_chunk$set(echo = TRUE)
library(hexSticker)
imgurl <- system.file("cshl_logo_alternate_RGB.png", package="hexSticker")
library(hexSticker)
imgurl <- system.file("cshl_logo_alternate_RGB.png", package="hexSticker")
sticker(imgurl, package="hexSticker", p_size=20, s_x=1, s_y=.75, s_width=.6,
filename="hexlogo.png")
data1 <- matrix(c(45, 30, 20, 105), nrow = 2)
# Perform the chi-squared test
test1 <- chisq.test(data1)
# Print the results
print(test1)
data2 <- matrix(c(32, 40, 45, 38, 35,
35, 38, 50, 33, 34,
40, 42, 55, 50, 60,
50, 48, 45, 55, 52), nrow = 4)
# Perform the chi-squared test
test2 <- chisq.test(data2)
# Print the results
print(test2)
data2 <- matrix(c(32, 40, 45, 38, 35,
35, 38, 50, 33, 34,
40, 42, 55, 50, 60,
50, 48, 45, 55, 52), nrow = 4)
# Perform the chi-squared test
test2 <- chisq.test(data2)
# Print the results
print(test2)
knitr::opts_chunk$set(echo = TRUE)
typeA <- c(2.3, 1.9, 3.1, 2.8, 2.4, 2.7, 1.6, 2.0, 2.2, 1.8, 2.5, 2.1, 2.6, 2.9, 2.0, 2.3, 2.7, 2.1, 2.5, 2.4, 2.2, 1.9, 2.8, 2.3, 2.6, 2.5, 2.1, 2.2, 2.4, 1.7)
typeA <- c(2.3, 1.9, 3.1, 2.8, 2.4, 2.7, 1.6, 2.0, 2.2, 1.8, 2.5, 2.1, 2.6, 2.9, 2.0, 2.3, 2.7, 2.1, 2.5, 2.4, 2.2, 1.9, 2.8, 2.3, 2.6, 2.5, 2.1, 2.2, 2.4, 1.7)
typeB <- c(1.4, 1.6, 1.9, 1.5, 1.7, 1.6, 1.8, 1.7, 1.3, 1.6, 1.7, 1.5, 1.4, 1.9, 1.6, 1.7, 1.4, 1.8, 1.6, 1.7, 1.5, 1.8, 1.7, 1.4, 1.6)
hist(typeA)
hist(typeB)
typeA <- c(2.3, 1.9, 3.1, 2.8, 2.4, 2.7, 1.6, 2.0, 2.2, 1.8, 2.5, 2.1, 2.6, 2.9, 2.0, 2.3, 2.7, 2.1, 2.5, 2.4, 2.2, 1.9, 2.8, 2.3, 2.6, 2.5, 2.1, 2.2, 2.4, 1.7)
typeB <- c(1.4, 1.6, 1.9, 1.5, 1.7, 1.6, 1.8, 1.7, 1.3, 1.6, 1.7, 1.5, 1.4, 1.9, 1.6, 1.7, 1.4, 1.8, 1.6, 1.7, 1.5, 1.8, 1.7, 1.4, 1.6)
hist(typeB)
hist(typeB,breaks = "FD")
typeA <- c(2.1, 1.8, 2.0, 1.9, 2.3, 1.7, 1.6, 1.9, 2.0, 1.8, 1.7, 1.9, 2.1, 1.8, 1.7, 1.9, 2.2, 1.8, 2.0, 1.6, 1.8, 2.1, 1.7, 1.9, 2.0)
typeB <- c(2.5, 2.4, 2.6, 2.2, 2.7, 2.3, 2.1, 2.6, 2.4, 2.2, 2.3, 2.5, 2.6, 2.4, 2.3, 2.5, 2.1, 2.3, 2.4, 2.2, 2.6, 2.4, 2.2, 2.3, 2.5, 2.7, 2.6, 2.4, 2.3, 2.2)
hist(typeB,breaks = "FD")
hist(typeA,breaks = "FD")
typeA <- c(1.9, 2.1, 2.0, 2.2, 2.3, 1.8, 2.1, 1.9, 2.0, 1.8, 2.1, 1.9, 2.2, 2.0, 2.1, 1.9, 2.0, 2.3, 1.8, 2.1, 1.9, 2.0, 1.8, 2.1, 1.9, 2.2, 2.0, 2.1, 1.9, 2.0, 2.3, 1.8, 2.1, 1.9, 2.0, 1.8)
typeB <- c(2.5, 2.7, 2.3, 2.4, 2.2, 2.6, 2.5, 2.4, 2.2, 2.3, 2.5, 2.6, 2.4, 2.3, 2.5, 2.1, 2.3, 2.4, 2.2, 2.6, 2.4, 2.2, 2.3, 2.5, 2.7, 2.6, 2.4, 2.3, 2.2, 2.5, 2.1, 2.3, 2.4, 2.2, 2.6, 2.4, 2.2, 2.3, 2.5)
hist(typeA,breaks = "FD")
summary(typeA)
std(typeA)
stdev(typeA)
sd(typeA)
rnorm(30, 2, 1)
rnorm(30, 2, 1) + rnorm(30, 0, 0.5)
hist(rnorm(30, 2, 1) + rnorm(30, 0, 0.5))
hist(rnorm(30, 2, 1) + rnorm(30, 0, 0.25))
hist(rnorm(30, 2, 1) + rnorm(30, 0, 0.3))
hist(rnorm(30, 2, 1) + rnorm(30, 0, 0.35))
hist(rnorm(30, 2, 1) + rnorm(30, 0, 0.2))
hist(rnorm(30, 2, 1) + rnorm(30, 0, 0.25))
summary(typeB)
rnorm(30, 4, 2) + rnorm(30, 0, 0.25)
hist(rnorm(30, 4, 2) + rnorm(30, 0, 0.25))
hist(rnorm(30, 4, 2) + rnorm(30, 0, 0.25))
hist(rnorm(30, 4, 2.5) + rnorm(30, 0, 0.25))
trmt <- rnorm(30, 4, 2.5) + rnorm(30, 0, 0.25)
trmt
qqnorm(trmt)
qqline(trmt, col = 2)
trmt <- rnorm(50, 4, 2.5) + rnorm(50, 0, 0.25)
qqnorm(trmt)
qqnorm(trmt)
qqline(trmt, col = 2)
hist(rnorm(50, 2, 1) + rnorm(50, 0, 0.25))
ctrl <- rnorm(50, 2, 1) + rnorm(50, 0, 0.25)
qqnorm(ctrl)
qqline(ctrl, col = 2)
ctrl <- rnorm(25, 2, 1) + rnorm(50, 0, 0.25)
trmt <- rnorm(30, 4, 2.5) + rnorm(50, 0, 0.25)
ctrl <- rnorm(25, 2, 1) + rnorm(25, 0, 0.25)
trmt <- rnorm(30, 4, 2.5) + rnorm(30, 0, 0.25)
t.test(ctrl, trmt)
trmt <- rnorm(30, 3, 2.5) + rnorm(30, 0, 0.25)
t.test(ctrl, trmt)
ctrl
write.csv(data.frame(ctrl), file = "test.csv")
write.csv(data.frame(trmt), file = "test1.csv")
trmt <- abs(rnorm(30, 3, 2.5) + rnorm(30, 0, 0.25))
t.test(ctrl, trmt)
trmt <- abs(rnorm(30, 4, 2.5) + rnorm(30, 0, 0.25))
t.test(ctrl, trmt)
ctrl <- c(rnorm(25, 2, 1) + rnorm(25, 0, 0.25), rep(NA, 5))
trmt <- abs(rnorm(30, 4, 2.5) + rnorm(30, 0, 0.25))
data.frame(Control = ctrl, Treatment = trmt), row.names = NULL)
data.frame(Control = ctrl, Treatment = trmt, row.names = NULL)
write.csv(data.frame(Control = ctrl, Treatment = trmt, row.names = NULL), "test.csv")
write.csv(data.frame(Control = ctrl, Treatment = trmt, row.names = NULL), "test.csv", row.names = F)
dat <- data.frame(Control = ctrl, Treatment = trmt, row.names = NULL)
t.test(dat$Control, dat$Treatment)
# Creating the dataset
patient <- 1:40
before <- c(150, 160, 155, 165, 148, 152, 160, 158, 165, 170, 152, 160, 155, 148, 162, 150, 165, 155, 148, 158, 155, 160, 150, 165, 158, 150, 165, 160, 155, 148, 162, 150, 165, 155, 148, 158, 152, 160, 155, 150)
after <- c(140, 145, 150, 155, 135, 140, 148, 150, 155, 160, 142, 148, 145, 140, 150, 140, 155, 142, 138, 148, 142, 150, 142, 155, 150, 140, 155, 150, 145, 138, 150, 140, 155, 145, 135, 150, 148, 140, 148, 142, 140)
# Creating the dataframe
data <- data.frame(Patient = patient, Before = before, After = after)
knitr::opts_chunk$set(echo = TRUE)
patient <- 1:40
before <- c(150, 160, 155, 165, 148, 152, 160, 158, 165, 170, 152, 160, 155, 148, 162, 150, 165, 155, 148, 158, 155, 160, 150, 165, 158, 150, 165, 160, 155, 148, 162, 150, 165, 155, 148, 158, 152, 160, 155, 150)
after <- c(140, 145, 150, 155, 135, 140, 148, 150, 155, 160, 142, 148, 145, 140, 150, 140, 155, 142, 138, 148, 142, 150, 142, 155, 150, 140, 155, 150, 145, 138, 150, 140, 155, 145, 135, 150, 148, 140, 148, 142, 140)
# Creating the dataframe
data <- data.frame(Patient = patient, Before = before, After = after)
patient <- 1:40
before <- c(150, 160, 155, 165, 148, 152, 160, 158, 165, 170, 152, 160, 155, 148, 162, 150, 165, 155, 148, 158, 155, 160, 150, 165, 158, 150, 165, 160, 155, 148, 162, 150, 165, 155, 148, 158, 152, 160, 155, 150)
after <- c(140, 145, 150, 155, 135, 140, 148, 150, 155, 160, 142, 148, 145, 140, 150, 140, 155, 142, 138, 148, 142, 150, 142, 155, 150, 140, 155, 150, 145, 138, 150, 140, 155, 145, 135, 150, 148, 140, 148, 142)
# Creating the dataframe
data <- data.frame(Patient = patient, Before = before, After = after)
# Printing the dataset
print(data)
# Exporting the dataset as a CSV file
write.csv(data, "your_file_name.csv", row.names = FALSE)
t.test(data$Before, data$After, paired = T)
knitr::opts_chunk$set(echo = TRUE)
# Load the pwr package
library(pwr)
# Common values for all parts
desired_power <- 0.80
alpha <- 0.05
standard_deviation <- 2.0
# Part (a)
mean_standard <- 6.0
mean_experimental <- 5.0
# Calculate the minimum sample size for each group in part (a)
n_part_a <- pwr::pwr.t.test(
n = NULL,
d = abs(mean_experimental - mean_standard) / standard_deviation,
sig.level = alpha,
power = desired_power,
type = "two.sample"
)$n
# Part (b)
mean_standard_b <- 7.0
# Calculate the minimum sample size for each group in part (b)
n_part_b <- pwr::pwr.t.test(
n = NULL,
d = abs(mean_experimental - mean_standard_b) / standard_deviation,
sig.level = alpha,
power = desired_power,
type = "two.sample"
)$n
# Part (c)
standard_deviation_c <- 1.0
# Calculate the minimum sample size for each group in part (c)
n_part_c <- pwr::pwr.t.test(
n = NULL,
d = abs(mean_experimental - mean_standard) / standard_deviation_c,
sig.level = alpha,
power = desired_power,
type = "two.sample"
)$n
# Print the results
cat("Part (a): Minimum sample size for each group =", ceiling(n_part_a), "\n")
cat("Part (b): Minimum sample size for each group =", ceiling(n_part_b), "\n")
cat("Part (c): Minimum sample size for each group =", ceiling(n_part_c), "\n")
# Calculate the minimum sample size for each group in part (a)
n_part_a <- pwr::pwr.t.test(
n = NULL,
d = abs(mean_experimental - mean_standard) / standard_deviation,
sig.level = alpha,
power = desired_power,
type = "two.sample"
)$n
n_part_a
# Calculate the minimum sample size for each group in part (b)
n_part_b <- pwr::pwr.t.test(
n = NULL,
d = abs(mean_experimental - mean_standard_b) / standard_deviation,
sig.level = alpha,
power = desired_power,
type = "two.sample"
)$n
n_part_b
# Calculate the minimum sample size for each group in part (c)
n_part_c <- pwr::pwr.t.test(
n = NULL,
d = abs(mean_experimental - mean_standard) / standard_deviation_c,
sig.level = alpha,
power = desired_power,
type = "two.sample"
)$n
cat("Part (c): Minimum sample size for each group =", ceiling(n_part_c), "\n")
# Print the results
cat("Part (a): Minimum sample size for each group =", ceiling(n_part_a), "\n")
cat("Part (b): Minimum sample size for each group =", ceiling(n_part_b), "\n")
cat("Part (c): Minimum sample size for each group =", ceiling(n_part_c), "\n")
set.seed(42)
# Number of patients
n <- 50
# Generate data for Patient, Gene Expression (X), and Tumor Size (Y)
data <- data.frame(
Patient = 1:n,
Gene_Expression_X = round(rnorm(n, mean = 5.5, sd = 0.6), 1),
Tumor_Size_Y = round(rnorm(n, mean = 3.3, sd = 0.5), 1)
)
data
corr(data$Gene_Expression_X, data$Tumor_Size_Y)
cor.test(data$Gene_Expression_X, data$Tumor_Size_Y)
data
write.csv(data, "test.csv")
write.csv(data, "test.csv", row.names = F)
knitr::opts_chunk$set(echo = TRUE)
read.delim("dat_EarThickness.txt")
dat <- read.delim("dat_EarThickness.txt")
dat
library(tidyverse)
data %>%
pivot_wider(names_from = your_column_name, values_from = your_values_column)
data_wide
data
data <- read.delim("dat_EarThickness.txt")
data
# Pivot the data to wide format
data_wide <- data %>%
pivot_wider(names_from = Treatment, values_from = EarThickness)
data_wide
data %>% dplyr::select(-MouseID) %>%
pivot_wider(names_from = Treatment, values_from = EarThickness)
data %>% dplyr::select(-MouseID)
data %>% dplyr::select(-MouseID) %>%
pivot_wider(names_from = Treatment, values_from = EarThickness)
data %>% group_by(Treatment) %>% summarise(n = n())
data
data[1:15, 2:3]
data
LowDose = data[16:30, 2:3]
LowDose
data
cbind(NormalFood = data[1:15, 2:3],
LowDose = data[16:30, 2:3],
MedDose = data[31:45, 2:3],
HighDose = data[46:60, 2:3]
)
data[1:15, 2:3]
cbind(NormalFood = data[1:15, 3],
LowDose = data[16:30, 3],
MedDose = data[31:45, 3],
HighDose = data[46:60, 3]
)
cbind(NormalFood = data[1:15, 3],
LowDose = data[16:30, 3],
MedDose = data[31:45, 3],
HighDose = data[46:60, 3]
) %>% as.data.frame()
cbind(NormalFood = data[1:15, 3],
LowDose = data[16:30, 3],
MedDose = data[31:45, 3],
HighDose = data[46:60, 3]
) %>% as.data.frame() %>%
write.csv(., "test.csv", row.names = F)
data
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
data(cats)
write.csv(cats, "cats.csv")
cats
fit <- lm(Hwt ~ Sex, cats)
summary(fit)
fit <- lm(Hwt ~ Bwt + Sex, cats)
summary(fit)
fit <- lm(Hwt ~ Bwt + Sex + Bwt*Sex, cats)
summary(fit)
library(survminder)
library(survminer)
library(survival)
data(veteran)
data(veteran)
cancer
?cancer
cancer
cancer[10:15,]
data(veteran, package = survival)
data(veteran, package = "survival")
data(veteran, package = "survival")
data(cancer, package="survival")
cancer
library(survival); library(survminer); library(ranger); library(ggplot2); library(dplyr); library(ggfortify)
library(survival); library(survminer); library(ranger); library(ggplot2); library(dplyr)
data(veteran)
str(veteran)
data(veteran)
str(veteran)
veteran
veteran
veteran[10:15,]
?veteran
veteran
write.csv(veteran, "veteran.csv")
write.csv(veteran, "veteran.csv")
veteran
# write.csv(veteran, "veteran.csv")
km2 = survfit(Surv(time, status) ~ trt, data = veteran) survdiff(Surv(time, status) ~ trt, data = veteran)
# write.csv(veteran, "veteran.csv")
library(survival)
library(survminer)
km2 = survfit(Surv(time, status) ~ trt, data = veteran) survdiff(Surv(time, status) ~ trt, data = veteran)
# write.csv(veteran, "veteran.csv")
library(survival)
library(survminer)
km2 = survfit(Surv(time, status) ~ trt, data = veteran)
survdiff(Surv(time, status) ~ trt, data = veteran)
